<resources>
    <string name="app_name">Project1</string>
    <string name="title_activity_main">MainActivity</string>
    <string name="objectclass_detail">Class คือ คุณลักษณะ หรือคุณสมบัติของวัตถุใดวัตถุหนึ่ง หรื่อจะง่ายๆคือเป็นตัวกำหนดคุณสมบัติได้ถูกสร้างขึ้น จะขอยกตัวอย่าง class Calculator มีคุณสมบัติในการบวก ลบ หรือขึ้นอยู่กับที่เราสร้างคุณสมบัติใหม่ๆเพิ่มเติม </string>
    <string name="objectcalss_detail2">Obeject คือ วัตถุที่สร้างขึ้นมาจาก Class โดยจะสามารถนำไปใช้ดำเนินงานต่าง ๆ ได้ตามความสามารถที่ระบุไว้ใน Class</string>
    <string name="inheritance_detail">Inheritance เป็นคุณสมบัติในการเขียนโปรแกรมเชิงวัตถุที่เรียกว่าคุณสมบัติการสืบทอด โดยที่คลาสสามารถสืบทอดสมาชิกของมันจากคลาสหลัก (super class) ไปยังคลาสย่อย (delivered class) โดยการสืบทอดในภาษา Java นั้นสมาชิกทั้งหมดจะถูกสืบทอดไปยังคลาสย่อย ยกเว้นสมาชิกที่มีระดับการเข้าถึงเป็น private และ constructor ของมัน</string>
    <string name="encap_detail">   Encapsulation หมายถึง การเขียนโปรแกรมที่มีการซ่อนข้อมูล (information hiding) เพื่อป้องกันการเข้าถึงข้อมูลจากภายนอก และบังคับให้ Object จาก class อื่นเข้าถึงข้อมูลที่ถูกซ่อนไว้ผ่านทาง interface ที่เตรียมไว้ นั่นคือ Setter และ Getter นั่นเอง โดย Setter ทำหน้าที่กำหนดค่าหรือเปลี่ยนแปลงข้อมูล Getter ทำหน้าที่ส่งข้อมูลภายในออกมา</string>
    <string name="datahide_header">Access Modifier โดยปกติของภาษาจาวามีทั้งหมด 4 ระดับด้วยกัน (เรียงตามระดับเข้มงวดน้อยที่สุด ไปยังเข้มงวดมากที่สุด)</string>
    <string name="datahide_public">1. public เป็นการประกาศระดับการเข้าถึงที่เข้มงวดน้อยที่สุด หรือกล่าวได้ว่าใคร ๆ ก็สามารถเข้าถึง และเรียกใช้งานได้ (นอก - ใน Class สามารถเข้าถึง และใช้งานได้หมด)</string>
    <string name="datahide_protect">2. protected เป็นการประกาศระดับการเ้ข้าถึงที่เกี่ยวข้องกับเรื่องการสืบทอด (InInheritance)</string>
    <string name="datahide_package">3. No modifier เป็นระดับการเข้าถึงที่ไม่ต้องประกาศใด ๆ เหมือนกับแบบอื่น ๆ โดยเข้าถึงได้กับภายใน Class และภายใน package เท่านั้น โดย package เปรียบเสมือนกับ Folder ต่าง ๆ ที่บรรจุ Source Code เอาไว้</string>
    <string name="datahide_private">4. private เป็นการประกาศระดับการเข้าถึงที่เข้มงวดที่สุด สามารถเข้าถึงได้เฉพาะภายใน Class เท่านั้น หรือเข้าใช้งานผ่าน Method Public ที่กำหนดเอาไว้โดยเฉพาะ</string>
    <string name="poly_detail">"Polymorphism" ถูกให้ความหมายว่า "various form" หรือการเป็นได้หลากหลายรูปแบบ ในทางการเขียนโปรแกรมมันก็มีความหมายเช่นนั้น คือการเป็นได้หลากหลายรูปแบบ ในทางปฏิบัติมันคือการที่เราสามารถประกาศตัวแปรชนิดหนึ่งแต่สามารถอ้างอิงไปยังออบเจกต์ได้หลายชนิด</string>
    <string name="ply_detail2">Note: object ที่ถูกสร้างในรูปของ polymorphism สามารถอ้างอิงถึงตัวแปรได้เฉพาะในขอบเขตของ class ที่ใช้ประกาศ object เท่านั้น</string>
    <string name="constructor_detail">Constructor คือสิ่งที่มีไว้สำหรับกำหนดค่าเริ่มต้นให้กับตัวแปรคลาสของอ็อปเจ็ค คอนสตรัคเตอร์จะทำงานอัตโนมัติเมื่อมีการ new อ็อปเจ็คขึ้นมา ระบบจะทำการจองพื้นที่ในหน่วยความจำสำหรับแปรอ็อปเจ็คแล้วตามด้วยConstructor</string>
    <string name="title_Correct">คำตอบถูกต้อง</string>
    <string name="message_Correct">ถูกต้องต้องค่ะ เก่งมากกก</string>
    <string name="title_Wrong">คำตอบผิด</string>
    <string name="message_Wrong1">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        พิมพ์เขียว เพราะ Class เหมือนพิมพ์เขียวที่ใช้นำไปสร้าง Object ต่างๆ
    </string>
    <string name="message_Wrong2">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ\nสร้าง OBJECT ซึ่ง Object คือวัตถุที่ถูกสร้างขึ้นจาก Class
    </string>
    <string name="message_Wrong3">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        สืบทอดคุณสมบัติ
    </string>
    <string name="message_Wrong4">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        กำหนดค่าเริ่มต้นให้ตัวแรก จะมีประโยชน์เมื่อเราต้องการ\nกำหนดค่าตัวแปรที่คลาสที่เรา\nประกาศไว้ทั้งหมด
    </string>
    <string name="message_Wrong5">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        สร้างช่องทางการเข้าถึงข้อมูลที่\nปกปิดไว้ เมื่อมีการจำกัดการเข้าถึง เช่นคำสั่ง Private จะใช้หลักการของ Encapsulation เพื่อเข้าถึงข้อมูลดังกล่าว
    </string>
    <string name="message_Wrong6">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        เข้าถึงได้ทั้งหมด
    </string>
    <string name="message_Wrong7">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        CLASS เดียวกัน
    </string>
    <string name="message_Wrong8">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        CLASS, SUBCLASS และ\nPACKAGE เดียวกัน
    </string>
    <string name="message_Wrong9">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        POLYMORPHISM คือ การพ้องรูป ที่วัตถุที่เกิดจากชนิดของวัตถุแม่\nเดียวกันสามารถมีความสามารถ\n(เมธอด)เดียวกันแต่ผลลัพธ์ในการ\nดำเนินการไม่เหมือนกัน เช่น นกและแมลงปอเป็นสัตว์ปีกที่สามารถบินได้เหมือนกัน
        แต่วิธีบินแตกต่างกัน
    </string>
    <string name="message_Wrong10">ตอบผิดค่ะ คำตอบที่ถูกต้องคือ
        เรียกใช้คำสั่งจากคลาสแม่ได้ทันที เพราะการใช้ Inhertitance \nทำให้Classลูกสามารถเรียกใช้งาน\nคำสั่งต่าง ๆ จาก Class พ่อแม่ ได้เลยทันทีโดยไม่จำเป็นต้องเขียน\nโปรแกรมใหม่
    </string>
    <string name="setName">setName</string>
    <string name="getName">getName</string>
</resources>
